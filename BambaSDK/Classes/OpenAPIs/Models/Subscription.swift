//
// Subscription.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct Subscription: Codable, Hashable {

    /** The SKU from product related to the subscription */
    public var sku: String
    /** The product name related to the subscription */
    public var name: String
    /** The state of the subscription */
    public var state: String
    /** The date and time (ISO 8601 format) of start of validity of the subscription */
    public var validFrom: Date
    /** The date and time (ISO 8601 format) of end of validity of the subscription */
    public var validTo: Date
    public var relatedServices: [Service]

    public init(sku: String, name: String, state: String, validFrom: Date, validTo: Date, relatedServices: [Service]) {
        self.sku = sku
        self.name = name
        self.state = state
        self.validFrom = validFrom
        self.validTo = validTo
        self.relatedServices = relatedServices
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sku
        case name
        case state
        case validFrom
        case validTo
        case relatedServices
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sku, forKey: .sku)
        try container.encode(name, forKey: .name)
        try container.encode(state, forKey: .state)
        try container.encode(validFrom, forKey: .validFrom)
        try container.encode(validTo, forKey: .validTo)
        try container.encode(relatedServices, forKey: .relatedServices)
    }
}
