//
// Product.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct Product: Codable, Hashable {

    /** A unique identifier for the product variant */
    public var sku: String?
    /** The name of the product */
    public var name: String?
    /** The price of the product */
    public var price: Double?
    /** Type of the product, it can be *bundle* or *not_bundle* */
    public var type: String?
    /** Image of the product */
    public var image: String?
    /** The collection of bundle items related to *bundle* products */
    public var bundleItems: [ProductBundleItems]?

    public init(sku: String? = nil, name: String? = nil, price: Double? = nil, type: String? = nil, image: String? = nil, bundleItems: [ProductBundleItems]? = nil) {
        self.sku = sku
        self.name = name
        self.price = price
        self.type = type
        self.image = image
        self.bundleItems = bundleItems
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sku
        case name
        case price
        case type
        case image
        case bundleItems
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sku, forKey: .sku)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(price, forKey: .price)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(image, forKey: .image)
        try container.encodeIfPresent(bundleItems, forKey: .bundleItems)
    }
}
